% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_power_best_norm_rank.R
\name{sim_power_best_norm_rank}
\alias{sim_power_best_norm_rank}
\title{Simulate Power to Select Best Group by Ranks (Normal Outcomes)}
\usage{
sim_power_best_norm_rank(
  noutcomes,
  sd,
  dif,
  weights,
  ngroups,
  npergroup,
  nsimul
)
}
\arguments{
\item{noutcomes}{Integer. Number of outcomes to evaluate.}

\item{sd}{Numeric vector. Standard deviations for each outcome.}

\item{dif}{Numeric vector. Difference in means between the best and other groups.}

\item{weights}{Numeric vector. Weights per outcome (rescaled internally).}

\item{ngroups}{Integer. Number of groups.}

\item{npergroup}{Integer or vector. Number of subjects per group.}

\item{nsimul}{Integer. Number of simulations.}
}
\value{
A data frame with empirical power and 95\% confidence interval.
}
\description{
Estimates the empirical power to identify the most promising group as best,
using weighted ranks across outcomes, assuming normally distributed outcomes.
}
\details{
Each outcome is independent and normally distributed. The most promising group
is assumed to have a mean at least \code{dif} higher than the others. Ranks are
weighted and summed per group across outcomes.

If \code{weights} is specified, it is internally rescaled to sum to \code{noutcomes}.
The most promising group is always considered to be the first group.
}
\examples{
\dontrun{
sim_power_best_norm_rank(
  noutcomes = 3,
  sd = c(1, 0.8, 1.5),
  dif = c(0.2, 0.15, 0.3),
  weights = c(0.5, 0.3, 0.2),
  ngroups = 3,
  npergroup = c(30, 25, 25),
  nsimul = 1000
)
}
}
